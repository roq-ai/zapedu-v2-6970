generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model agent {
  id            String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  uid           String     @db.VarChar(255)
  name          String     @db.VarChar(255)
  system_prompt String?    @db.VarChar(255)
  context       String?    @db.VarChar(255)
  domain        String?    @db.VarChar(255)
  target        String?    @db.VarChar(255)
  goal          String?    @db.VarChar(255)
  extra_prompts String?    @db.VarChar(255)
  user_id       String     @db.Uuid
  created_at    DateTime   @default(now()) @db.Timestamp(6)
  updated_at    DateTime   @default(now()) @db.Timestamp(6)
  user          user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  instance      instance[]
}

model instance {
  id              String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name            String   @db.VarChar(255)
  whatsapp_number String   @db.VarChar(255)
  user_id         String   @db.Uuid
  agent_id        String   @db.Uuid
  webhook_url     String?  @db.VarChar(255)
  qr_code_url     String?  @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @default(now()) @db.Timestamp(6)
  agent           agent    @relation(fields: [agent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user            user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  agent       agent[]
  instance    instance[]
  zap_edu     zap_edu[]
}

model zap_edu {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
